name: Terraform Deployment Option2

on:
  workflow_call:
    # inputs:
    #   config-path:
    #     required: true
    #     type: string
    # secrets:
    #   token:
    #     required: true

jobs:
  deploy_dev:
    runs-on: ubuntu-latest
    if: github.event_name == 'release' || github.event.inputs.release_version != 'latest'

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    # Steps for deploying to dev environment
    - name: Terraform Init (Dev)
      run: terraform init
      working-directory: ./terraform/dev

    - name: Terraform Plan (Dev)
      run: terraform plan -out=tfplan
      working-directory: ./terraform/dev

    - name: Terraform Apply (Dev)
      run: terraform apply -input=false tfplan
      working-directory: ./terraform/dev

    - name: Capture Release Version
      id: release_info
      run: echo "VERSION=${{ github.event.release.tag_name || github.event.inputs.release_version }}" >> $GITHUB_ENV

    - name: Print Release Version
      run: |
        echo "Release Version: $VERSION"

  deploy_qa:
    runs-on: ubuntu-latest
    needs: deploy_dev
    environment: 'prod'
    if: always() && github.event_name == 'release' || github.event.inputs.release_version != 'latest'

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    # Steps for deploying to QA environment
    - name: Terraform Init (QA)
      run: terraform init
      working-directory: ./terraform/qa

    - name: Terraform Plan (QA)
      run: terraform plan -out=tfplan
      working-directory: ./terraform/qa

    - name: Terraform Apply (QA)
      run: terraform apply -input=false tfplan
      working-directory: ./terraform/qa
